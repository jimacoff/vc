<% helpers = Rails.application.routes.url_helpers %>

import React from 'react'
import Search from './search.jsx.erb'
import Investors from './investors.jsx.erb'
import { ffetch } from './utils'
import update from 'immutability-helper'

export default class VCFinder extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      targets: [],
      tier: 1,
    };
  }

  componentDidMount() {
    ffetch('<%= helpers.external_api_v1_target_investors_path %>')
    .then(resp => resp.json())
    .then(targets => this.setState({targets}));
  }

  onInvestorSelect = (investor) => {
    ffetch('<%= helpers.external_api_v1_target_investors_path %>', 'POST', {investor: {id: investor.id, tier: this.state.tier}})
    .then(resp => resp.json())
    .then(target => this.setState({targets: this.state.targets.concat([target])}));
  };

  onStageChange = (id, stage) => {
    ffetch(`<%= helpers.external_api_v1_target_investors_path %>/${id}`, 'PATCH', {target_investor: {stage}})
    .then(() => {
      let index = _.findIndex(this.state.targets, {id});
      let targets = update(this.state.targets, {[index]: {stage: {$set: stage}}});
      this.setState({targets});
    })
  };

  onTierChange = (tier) => {
    this.setState({tier});
  };

  render() {
    return (
      <div>
        <Search onSelect={this.onInvestorSelect} />
        <Investors
          targets={this.state.targets}
          tier={this.state.tier}
          onStageChange={this.onStageChange}
          onTierChange={this.onTierChange}
        />
      </div>
    );
  }
}